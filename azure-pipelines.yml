# Copyright (c) 2018 The nanoFramework project contributors
# See LICENSE file in the project root for full license information.

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - /*.md
    - .gitignore

pr:
  branches:
    include:
    - master
  autoCancel: true

# scheduled build
schedules:
- cron: "50 23 * * *"
  branches:
    include: [ master ]
  always: true
  displayName: Daily build at 23:50

# add nf-tools repo to resources (for Azure Pipelines templates)
# add nf-interpreter repo to resources (for Azure Pipelines templates)
resources:
  repositories:
    - repository: templates
      type: github
      name: nanoframework/nf-tools
      endpoint: nanoframework
    - repository: templatesBuild
      type: github
      name: nanoframework/nf-interpreter
      ref: refs/heads/develop
      endpoint: nanoframework

variables:
  GNU_GCC_TOOLCHAIN_PATH: $(Agent.TempDirectory)\GNU_Tools_ARM_Embedded

jobs:

##############################
- job: Get_Commit_Message
  pool:
    vmImage: 'VS2017-Win2016'

  steps:
  - checkout: self
    fetchDepth: 1

    # get commit message
  - powershell: |

      if($env:Build_SourceBranch -like "refs/pull*")
      {
        # PR build, get PR message

        # need to get PR number from branch as the Azure Pipeline var can't be trusted
        if($env:Build_SourceBranch -match '(?<=(pull\/))\w*(?=(\/))')
        {
          $prNumber = $matches[0]

          $prUrl = "https://api.github.com/repos/$env:Build_Repository_Name/pulls/$prNumber"

          $commit = Invoke-RestMethod -Uri $prUrl -ContentType "application/json" -Method GET

          $commitMessage = $commit.body
        }
      }
      else
      {
        # not a PR, get subject and commit message for commit
        $commitMessage = git log --format='%B' -1
      }

      # need to flatten message by removing new lines
      $commitMessage = $commitMessage -replace "`r`n", " "


      # set variable to foward to jobs
      echo "##vso[task.setvariable variable=COMMIT_MESSAGE;isOutput=true]$commitMessage"
    name: getCommitMessage
    displayName: grab commit message

##############################
- job: Check_Build_Options
  pool:
    vmImage: 'VS2017-Win2016'

  dependsOn: 
  - Get_Commit_Message

  steps:
  - checkout: self
    fetchDepth: 1

  - powershell: |

      if($env:Build_SourceBranch -like "refs/pull*")
      {
        # this is a PR: always build
        echo "##vso[task.setvariable variable=GO;isOutput=true]True"

        "**PR build**" | Write-Host
      }
      else
      {
        # this has BUILD ALL build var set to true
        if($env:BUILD_ALL -like "True")
        {
          echo "##vso[task.setvariable variable=GO;isOutput=true]True"

          "**Build ALL**" | Write-Host
        }
        elseif(
          ($COMMIT_MESSAGE -like "***GHI_FEZ_CERB40_NF***") -Or
          ($COMMIT_MESSAGE -like "***I2M_ELECTRON_NF***") -Or
          ($COMMIT_MESSAGE -like "***I2M_OXYGEN_NF***") -Or
          ($COMMIT_MESSAGE -like "***ST_NUCLEO64_F401RE_NF***") -Or
          ($COMMIT_MESSAGE -like "***ST_NUCLEO64_F411RE_NF***") -Or
          ($COMMIT_MESSAGE -like "***ST_STM32F411_DISCOVERY***") -Or
          ($COMMIT_MESSAGE -like "***ST_NUCLEO144_F412ZG_NF***") -Or
          ($COMMIT_MESSAGE -like "***ST_NUCLEO144_F746ZG***") -Or
          ($COMMIT_MESSAGE -like "***ST_STM32F4_DISCOVERY***") -Or
          ($COMMIT_MESSAGE -like "***ST_NUCLEO144_F439ZI***") 
        )
        {
            # there is a tag to build a valid target, build images
            echo "##vso[task.setvariable variable=GO;isOutput=true]True"

            "**Build target(s)**" | Write-Host
        }
        else
        {
          # daily build: get commit date 
          # clone nf-interpreter
          git clone https://github.com/nanoframework/nf-interpreter.git -b develop nf-interpreter --depth 1 -q
          cd "nf-interpreter" > $null

          $commitDate = git show -s --format=%cd --date=short
          $commitDate = [DateTime]$commitDate

          if($commitDate -eq [System.DateTime]::UtcNow.Date)
          {
            # last commit from nf-interpreter is from today, build images
            echo "##vso[task.setvariable variable=GO;isOutput=true]True"  

            "**Update upstream: Build ALL**" | Write-Host
          }
          else
          {
            # last commit from nf-interpreter is older than today, skip build

            "***********************************************************************" | Write-Host
            "* Last commit from nf-interpreter is older than today, skipping build *" | Write-Host
            "***********************************************************************" | Write-Host

            echo "##vso[task.setvariable variable=GO;isOutput=true]False"
          }
        }
      }

    name: BuildOptions
    displayName: Evaluate build options

##############################
- job: Build_GHI_FEZ_CERB40_NF
  condition: or( contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***GHI_FEZ_CERB40_NF***'), contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ALL***'), eq(variables['BUILD_ALL'], 'true'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'VS2017-Win2016'

  variables:
    BoardName: GHI_FEZ_CERB40_NF
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DNF_FEATURE_DEBUGGER=ON -DNF_FEATURE_RTC=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('GHI_FEZ_CERB40_NF_versioncounter', 3)]
    GccArm_Version:
    NeedsDFU: true

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml

  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml

  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild

  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild

  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild

  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/publish-bintray.yml@templatesBuild

##############################
- job: Build_I2M_ELECTRON_NF
  condition: or( contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***I2M_ELECTRON_NF***'), contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ALL***'), eq(variables['BUILD_ALL'], 'true'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'VS2017-Win2016'

  variables:
    BoardName: I2M_ELECTRON_NF
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DNF_FEATURE_DEBUGGER=ON -DUSE_RNG=OFF -DNF_FEATURE_RTC=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('I2M_ELECTRON_NF_versioncounter', 3)]
    GccArm_Version:
    NeedsDFU: true

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml

  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml

  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild

  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild

  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild

  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/publish-bintray.yml@templatesBuild

##############################
- job: Build_I2M_OXYGEN_NF
  condition: or( contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***I2M_OXYGEN_NF***'), contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ALL***'), eq(variables['BUILD_ALL'], 'true'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'VS2017-Win2016'

  variables:
    BoardName: I2M_OXYGEN_NF
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DNF_FEATURE_DEBUGGER=ON -DUSE_RNG=OFF -DNF_FEATURE_RTC=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('I2M_OXYGEN_NF_versioncounter', 3)]
    GccArm_Version:
    NeedsDFU: true

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml

  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml

  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild

  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild

  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild

  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/publish-bintray.yml@templatesBuild

##############################
- job: Build_ST_NUCLEO64_F401RE_NF
  condition: or( contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ST_NUCLEO64_F401RE_NF***'), contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ALL***'), eq(variables['BUILD_ALL'], 'true'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'VS2017-Win2016'

  variables:
    BoardName: ST_NUCLEO64_F401RE_NF
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DNF_FEATURE_DEBUGGER=ON -DUSE_RNG=OFF -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON -DAPI_nanoFramework.Devices.OneWire=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('ST_NUCLEO64_F401RE_NF_versioncounter', 3)]
    GccArm_Version:
    NeedsDFU: false

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml

  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml

  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild

  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild

  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild

  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/publish-bintray.yml@templatesBuild

##############################
- job: Build_ST_NUCLEO64_F411RE_NF
  condition: or( contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ST_NUCLEO64_F411RE_NF***'), contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ALL***'), eq(variables['BUILD_ALL'], 'true'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'VS2017-Win2016'

  variables:
    BoardName: ST_NUCLEO64_F411RE_NF
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DNF_FEATURE_DEBUGGER=ON -DUSE_RNG=OFF -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('ST_NUCLEO64_F411RE_NF_versioncounter', 3)]
    GccArm_Version:
    NeedsDFU: false

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml

  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml

  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild

  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild

  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild

  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/publish-bintray.yml@templatesBuild

##############################
- job: Build_ST_STM32F411_DISCOVERY
  condition: or( contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ST_STM32F411_DISCOVERY***'), contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ALL***'), eq(variables['BUILD_ALL'], 'true'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'VS2017-Win2016'

  variables:
    BoardName: ST_STM32F411_DISCOVERY
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DNF_FEATURE_DEBUGGER=ON -DUSE_RNG=OFF -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('ST_STM32F411_DISCOVERY_versioncounter', 3)]
    GccArm_Version:
    NeedsDFU: false

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml

  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml

  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild

  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild

  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild

  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/publish-bintray.yml@templatesBuild

##############################
- job: Build_ST_NUCLEO144_F412ZG_NF
  condition: or( contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ST_NUCLEO144_F412ZG_NF***'), contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ALL***'), eq(variables['BUILD_ALL'], 'true'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'VS2017-Win2016'

  variables:
    BoardName: ST_NUCLEO144_F412ZG_NF
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DNF_FEATURE_DEBUGGER=ON -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=OFF -DAPI_Windows.Devices.Adc=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('ST_NUCLEO144_F412ZG_NF_versioncounter', 3)]
    GccArm_Version:
    NeedsDFU: false

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml

  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml

  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild

  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild

  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild

  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/publish-bintray.yml@templatesBuild

##############################
- job: Build_ST_NUCLEO144_F746ZG
  condition: or( contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ST_NUCLEO144_F746ZG***'), contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ALL***'), eq(variables['BUILD_ALL'], 'true'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'VS2017-Win2016'

  variables:
    BoardName: ST_NUCLEO144_F746ZG
    BuildOptions: -DTARGET_SERIES=STM32F7xx -DRTOS=CHIBIOS -DNF_FEATURE_DEBUGGER=ON -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DNF_FEATURE_HAS_CONFIG_BLOCK=ON -DAPI_System.Math=ON -DAPI_Hardware.Stm32=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON -DAPI_System.Net=ON -DNF_SECURITY_MBEDTLS=ON -DAPI_nanoFramework.Devices.OneWire=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('ST_NUCLEO144_F746ZG_versioncounter', 3)]
    GccArm_Version:
    NeedsDFU: false

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml

  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml

  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild

  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild

  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild

  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/publish-bintray.yml@templatesBuild

##############################
- job: Build_ST_STM32F4_DISCOVERY
  condition: or( contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ST_STM32F4_DISCOVERY***'), contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ALL***'), eq(variables['BUILD_ALL'], 'true'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'VS2017-Win2016'

  variables:
    BoardName: ST_STM32F4_DISCOVERY
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DRTOS=CHIBIOS -DSUPPORT_ANY_BASE_CONVERSION=ON -DNF_FEATURE_DEBUGGER=ON -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DAPI_System.Math=ON -DAPI_Hardware.Stm32=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON -DAPI_nanoFramework.Devices.OneWire=ON -DAPI_nanoFramework.Devices.Can=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('ST_STM32F4_DISCOVERY_versioncounter', 3)]
    GccArm_Version:
    NeedsDFU: false

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml

  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml

  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild

  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild

  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild

  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/publish-bintray.yml@templatesBuild

##############################
- job: Build_ST_NUCLEO144_F439ZI
  condition: or( contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ST_NUCLEO144_F439ZI***'), contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ALL***'), eq(variables['BUILD_ALL'], 'true'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'VS2017-Win2016'

  variables:
    BoardName: ST_NUCLEO144_F439ZI
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DRTOS=CHIBIOS -DNF_FEATURE_DEBUGGER=ON -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DNF_FEATURE_HAS_CONFIG_BLOCK=ON -DAPI_System.Math=ON -DAPI_Hardware.Stm32=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON -DAPI_System.Net=ON -DNF_SECURITY_MBEDTLS=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('ST_NUCLEO144_F439ZI_versioncounter', 3)]
    GccArm_Version:
    NeedsDFU: false

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml

  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml

  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild

  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild

  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild

  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/publish-bintray.yml@templatesBuild

##############################
- job: Build_TI_CC1352P1_LAUNCHXL
  condition: or( contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***TI_CC1352P1_LAUNCHXL***'), contains(dependencies.Get_Commit_Message.outputs['getCommitMessage.COMMIT_MESSAGE'], '***ALL***'), eq(variables['BUILD_ALL'], 'true'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'VS2017-Win2016'

  variables:
    BoardName: TI_CC1352P1_LAUNCHXL
    BuildOptions: -DTARGET_SERIES=CC13x2_26x2 -DRTOS=TI_SIMPLELINK -DSUPPORT_ANY_BASE_CONVERSION=OFF -DNF_FEATURE_DEBUGGER=ON -DNF_FEATURE_RTC=ON -DNF_FEATURE_WATCHDOG=OFF -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=OFF -DAPI_Windows.Devices.I2c=OFF -DAPI_Windows.Devices.Pwm=OFF -DAPI_Windows.Devices.SerialCommunication=OFF -DAPI_Windows.Devices.Adc=OFF -DAPI_nanoFramework.TI.EasyLink=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('TI_CC1352P1_LAUNCHXL_versioncounter', 3)]
    GccArm_Version:
    NeedsDFU: false

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml

  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml

  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild

  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild

  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild

  - template: azure-pipelines-templates/build-ti-simplelink.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build

  - template: azure-pipelines-templates/publish-bintray.yml@templatesBuild

##################################
# report build failure to Discord
- job: Report_Build_Failure
  dependsOn:
  - Build_GHI_FEZ_CERB40_NF
  - Build_I2M_ELECTRON_NF
  - Build_I2M_OXYGEN_NF
  - Build_ST_NUCLEO64_F401RE_NF
  - Build_ST_STM32F411_DISCOVERY
  - Build_ST_NUCLEO64_F411RE_NF
  - Build_ST_NUCLEO144_F412ZG_NF
  - Build_ST_NUCLEO144_F746ZG
  - Build_ST_STM32F4_DISCOVERY
  - Build_TI_CC1352P1_LAUNCHXL
  condition: or( failed('Build_GHI_FEZ_CERB40_NF'), failed('Build_I2M_ELECTRON_NF'), failed('Build_I2M_OXYGEN_NF'), failed('Build_ST_NUCLEO64_F401RE_NF'), failed('Build_ST_NUCLEO64_F411RE_NF'), failed('Build_ST_STM32F411_DISCOVERY'), failed('Build_ST_NUCLEO144_F412ZG_NF'), failed('Build_ST_NUCLEO144_F746ZG'), failed('Build_ST_STM32F4_DISCOVERY'), failed('Build_TI_CC1352P1_LAUNCHXL'))

  pool:
    vmImage: 'VS2017-Win2016'

  steps:
  - checkout: self
    fetchDepth: 1

  # step from template @ nf-tools repo
  - template: azure-pipelines-templates/discord-webhook.yml@templates  
    parameters:
      status: 'failure'
      webhookUrl: '$(DiscordWebhook)'
      message: ''

