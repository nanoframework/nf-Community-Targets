# Copyright (c) .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.

trigger:
  branches:
    include: ["master", "develop*", "release-*", "refs/tags/*" ]
  paths:
    exclude: [ "doc", "*.md", ".gitignore", "README.md" ]

pr:
  autoCancel: true

# scheduled build
schedules:
- cron: "50 23 * * *"
  branches:
    include: [ main ]
  always: true
  displayName: Daily build at 23:50

# add nf-tools repo to resources (for Azure Pipelines templates)
# add nf-interpreter repo to resources (for Azure Pipelines templates)
resources:
  repositories:
    - repository: templates
      type: github
      name: nanoframework/nf-tools
      endpoint: nanoframework
    - repository: templatesBuild
      type: github
      name: nanoframework/nf-interpreter
      ref: refs/heads/develop
      endpoint: nanoframework

variables:
  GNU_GCC_TOOLCHAIN_PATH: $(Agent.TempDirectory)\GNU_Tools_ARM_Embedded

jobs:

##############################
- job: Get_Commit_Message
  pool:
    vmImage: 'windows-2019'

  steps:
  - checkout: self
    fetchDepth: 1

    # get commit message
  - powershell: |

      # PR build, get PR message

      # need to get PR number from branch as the Azure Pipeline var can't be trusted
      if($env:Build_SourceBranch -match '(?<=(pull\/))\w*(?=(\/))')
      {
        $prNumber = $matches[0]

        $prUrl = "https://api.github.com/repos/$env:Build_Repository_Name/pulls/$prNumber"
        # PR build, get PR message

        $commit = Invoke-RestMethod -Uri $prUrl -ContentType "application/json" -Method GET

        $commitMessage = $commit.body
      }
      else
      {
          # not a PR, get subject and commit message for commit
          $commitMessage = git log --format='%B' -1
      }

      # need to flatten message by removing new lines
      $commitMessage = $commitMessage.Replace("`r`n", " ")

      "Commit message is: '$commitMessage'" | Write-Host

      # set variable to foward to jobs
      echo "##vso[task.setvariable variable=COMMIT_MESSAGE;isOutput=true]$commitMessage"

    name: GetCommit
    displayName: Grab commit message

##############################
- job: Check_Build_Options
  pool:
    vmImage: 'windows-2019'

  dependsOn: 
  - Get_Commit_Message

  steps:
  - checkout: self
    fetchDepth: 1

  - powershell: |

      if($env:System_PullRequest_PullRequestId -ne $null)
      {
        # this is a PR: always build depending on target tag
        echo "##vso[task.setvariable variable=GO;isOutput=true]false"

        "**PR build**" | Write-Host
      }
      else
      {
        if($env:BUILD_ALL -like "True")
        {
          # this has BUILD ALL build var set to true
          "**Build ALL**" | Write-Host
        }
        elseif(
          ($COMMIT_MESSAGE -like "[x] MBN_QUAIL") -Or
          ($COMMIT_MESSAGE -like "[x] GHI_FEZ_CERB40_NF") -Or
          ($COMMIT_MESSAGE -like "[x] I2M_ELECTRON_NF") -Or
          ($COMMIT_MESSAGE -like "[x] I2M_OXYGEN_NF") -Or
          ($COMMIT_MESSAGE -like "[x] ST_NUCLEO64_F401RE_NF") -Or
          ($COMMIT_MESSAGE -like "[x] ST_NUCLEO64_F411RE_NF") -Or
          ($COMMIT_MESSAGE -like "[x] ST_STM32F411_DISCOVERY") -Or
          ($COMMIT_MESSAGE -like "[x] ST_NUCLEO144_F412ZG_NF") -Or
          ($COMMIT_MESSAGE -like "[x] ST_NUCLEO144_F746ZG") -Or
          ($COMMIT_MESSAGE -like "[x] ST_STM32F4_DISCOVERY") -Or
          ($COMMIT_MESSAGE -like "[x] ST_NUCLEO144_F439ZI") -Or
          ($COMMIT_MESSAGE -like "[x] TI_CC1352P1_LAUNCHXL_868") -Or
          ($COMMIT_MESSAGE -like "[x] TI_CC1352P1_LAUNCHXL_915") -Or
          ($COMMIT_MESSAGE -like "[x] BUILD ALL")
        )
        {
            # there is a tag to build a valid target (or ALL), build images
            echo "##vso[task.setvariable variable=GO;isOutput=true]false"

            "**Build target(s)**" | Write-Host
        }
        else
        {
          if($env:Build_Reason -eq "Schedule")
          {
            # scheduled daily build: get commit date 
            # clone nf-interpreter
            git clone https://github.com/nanoframework/nf-interpreter.git -b develop nf-interpreter --depth 1 -q
            cd "nf-interpreter" > $null

            $commitDate = git show -s --format=%cd --date=short
            $commitDate = [DateTime]$commitDate

            if($commitDate -eq [System.DateTime]::UtcNow.Date)
            {
              # last commit from nf-interpreter is from today, build images
              echo "##vso[task.setvariable variable=GO;isOutput=true]true"  

              "**Update upstream: Build ALL**" | Write-Host
            }
            else
            {
              # last commit from nf-interpreter is older than today, skip build

              "***********************************************************************" | Write-Host
              "* Last commit from nf-interpreter is older than today, skipping build *" | Write-Host
              "***********************************************************************" | Write-Host

              echo "##vso[task.setvariable variable=GO;isOutput=true]false"
            }
          }
          else
          {
            # build for other reasons: build depending on target tag
            echo "##vso[task.setvariable variable=GO;isOutput=true]false"

            "**build for other reasons**" | Write-Host  
          }
        }
      }

    name: BuildOptions
    displayName: Evaluate build options

##############################
- job: Build_MBN_QUAIL
  condition: or( eq(variables['BUILD_ALL'], 'true'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] MBN_QUAIL'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] BUILD ALL'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'windows-2019'

  variables:
    TargetBoard: MBN_QUAIL
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DRTOS=CHIBIOS -DSUPPORT_ANY_BASE_CONVERSION=ON -DNF_FEATURE_DEBUGGER=ON -DNF_FEATURE_RTC=ON -DNF_FEATURE_HAS_SDCARD=ON -DAPI_System.Math=ON -DAPI_Hardware.Stm32=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_System.Device.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_System.Device.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_nanoFramework.Devices.OneWire=ON -DAPI_Windows.Storage=ON -DAPI_nanoFramework.ResourceManager=ON -DAPI_nanoFramework.System.Collections=ON -DAPI_nanoFramework.System.Text=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('MBN_QUAIL_versioncounter', 0)]
    GccArm_Version:
    NeedsDFU: true

  steps:
  - checkout: self
    fetchDepth: 1
  
  - template: azure-pipelines-templates/set-build-version.yml
  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml
  - template: azure-pipelines-templates/build-preparations.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild
  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild
  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/publish-cloudsmith.yml@templatesBuild

##############################
- job: Build_GHI_FEZ_CERB40_NF
  condition: or( eq(variables['BUILD_ALL'], 'true'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] GHI_FEZ_CERB40_NF'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] BUILD ALL'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'windows-2019'

  variables:
    TargetBoard: GHI_FEZ_CERB40_NF
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DRTOS=CHIBIOS -DNF_FEATURE_DEBUGGER=ON -DNF_FEATURE_RTC=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('GHI_FEZ_CERB40_NF_versioncounter', 0)]
    GccArm_Version:
    NeedsDFU: true

  steps:
  - checkout: self
    fetchDepth: 1
  
  - template: azure-pipelines-templates/set-build-version.yml
  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml
  - template: azure-pipelines-templates/build-preparations.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild
  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild
  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/publish-cloudsmith.yml@templatesBuild

##############################
- job: Build_I2M_ELECTRON_NF
  condition: or( eq(variables['BUILD_ALL'], 'true'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] I2M_ELECTRON_NF'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] BUILD ALL'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'windows-2019'

  variables:
    TargetBoard: I2M_ELECTRON_NF
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DRTOS=CHIBIOS -DNF_FEATURE_DEBUGGER=ON -DUSE_RNG=OFF -DNF_FEATURE_RTC=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('I2M_ELECTRON_NF_versioncounter', 0)]
    GccArm_Version:
    NeedsDFU: true

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml
  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml
  - template: azure-pipelines-templates/build-preparations.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild
  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild
  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/publish-cloudsmith.yml@templatesBuild

##############################
- job: Build_I2M_OXYGEN_NF
  condition: or( eq(variables['BUILD_ALL'], 'true'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] I2M_OXYGEN_NF'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] BUILD ALL'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'windows-2019'

  variables:
    TargetBoard: I2M_OXYGEN_NF
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DRTOS=CHIBIOS -DNF_FEATURE_DEBUGGER=ON -DUSE_RNG=OFF -DNF_FEATURE_RTC=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON -DAPI_System.Math=ON -DAPI_Hardware.Stm32=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('I2M_OXYGEN_NF_versioncounter', 0)]
    GccArm_Version:
    NeedsDFU: true

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml
  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml
  - template: azure-pipelines-templates/build-preparations.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild
  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild
  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/publish-cloudsmith.yml@templatesBuild

##############################
- job: Build_ST_NUCLEO64_F401RE_NF
  condition: or( eq(variables['BUILD_ALL'], 'true'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] ST_NUCLEO64_F401RE_NF'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] BUILD ALL'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'windows-2019'

  variables:
    TargetBoard: ST_NUCLEO64_F401RE_NF
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DRTOS=CHIBIOS -DNF_FEATURE_DEBUGGER=ON -DUSE_RNG=OFF -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON -DAPI_nanoFramework.Devices.OneWire=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('ST_NUCLEO64_F401RE_NF_versioncounter', 0)]
    GccArm_Version:
    NeedsDFU: true

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml
  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml
  - template: azure-pipelines-templates/build-preparations.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild
  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild
  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/publish-cloudsmith.yml@templatesBuild

##############################
- job: Build_ST_NUCLEO64_F411RE_NF
  condition: or( eq(variables['BUILD_ALL'], 'true'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] ST_NUCLEO64_F411RE_NF'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] BUILD ALL'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'windows-2019'

  variables:
    TargetBoard: ST_NUCLEO64_F411RE_NF
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DRTOS=CHIBIOS -DNF_FEATURE_DEBUGGER=ON -DUSE_RNG=OFF -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON -DAPI_nanoFramework.System.Collections=ON -DAPI_nanoFramework.ResourceManager=ON -DAPI_nanoFramework.System.Text=ON -DAPI_System.Math=ON -DAPI_Hardware.Stm32=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('ST_NUCLEO64_F411RE_NF_versioncounter', 0)]
    GccArm_Version:
    NeedsDFU: false

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml
  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml
  - template: azure-pipelines-templates/build-preparations.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild
  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild
  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/publish-cloudsmith.yml@templatesBuild

##############################
- job: Build_ST_STM32F411_DISCOVERY
  condition: or( eq(variables['BUILD_ALL'], 'true'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] ST_STM32F411_DISCOVERY'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] BUILD ALL'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'windows-2019'

  variables:
    TargetBoard: ST_STM32F411_DISCOVERY
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DRTOS=CHIBIOS -DNF_FEATURE_DEBUGGER=ON -DUSE_RNG=OFF -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON -DAPI_nanoFramework.System.Collections=ON -DAPI_nanoFramework.ResourceManager=ON -DAPI_nanoFramework.System.Text=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('ST_STM32F411_DISCOVERY_versioncounter', 0)]
    GccArm_Version:
    NeedsDFU: false

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml
  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml
  - template: azure-pipelines-templates/build-preparations.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild
  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild
  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/publish-cloudsmith.yml@templatesBuild

##############################
- job: Build_ST_NUCLEO144_F412ZG_NF
  condition: or( eq(variables['BUILD_ALL'], 'true'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] ST_NUCLEO144_F412ZG_NF'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] BUILD ALL'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'windows-2019'

  variables:
    TargetBoard: ST_NUCLEO144_F412ZG_NF
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DRTOS=CHIBIOS -DNF_FEATURE_DEBUGGER=ON -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=OFF -DAPI_Windows.Devices.Adc=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('ST_NUCLEO144_F412ZG_NF_versioncounter', 0)]
    GccArm_Version:
    NeedsDFU: false

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml
  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml
  - template: azure-pipelines-templates/build-preparations.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild
  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild
  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/publish-cloudsmith.yml@templatesBuild

##############################
- job: Build_ST_NUCLEO144_F746ZG
  condition: or( eq(variables['BUILD_ALL'], 'true'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] ST_NUCLEO144_F746ZG'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] BUILD ALL'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'windows-2019'

  variables:
    TargetBoard: ST_NUCLEO144_F746ZG
    BuildOptions: -DTARGET_SERIES=STM32F7xx -DRTOS=CHIBIOS -DNF_FEATURE_DEBUGGER=ON -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DNF_FEATURE_HAS_CONFIG_BLOCK=ON -DAPI_System.Math=ON -DAPI_Hardware.Stm32=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON -DAPI_System.Net=ON -DNF_SECURITY_MBEDTLS=ON -DAPI_nanoFramework.Devices.OneWire=ON -DAPI_nanoFramework.System.Collections=ON -DAPI_nanoFramework.ResourceManager=ON -DAPI_nanoFramework.System.Text=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('ST_NUCLEO144_F746ZG_versioncounter', 0)]
    GccArm_Version:
    NeedsDFU: true

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml
  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml
  - template: azure-pipelines-templates/build-preparations.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild
  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild
  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/publish-cloudsmith.yml@templatesBuild

##############################
- job: Build_ST_STM32F4_DISCOVERY
  condition: or( eq(variables['BUILD_ALL'], 'true'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] ST_STM32F4_DISCOVERY'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] BUILD ALL'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'windows-2019'

  variables:
    TargetBoard: ST_STM32F4_DISCOVERY
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DRTOS=CHIBIOS -DSUPPORT_ANY_BASE_CONVERSION=ON -DNF_FEATURE_DEBUGGER=ON -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DAPI_System.Math=ON -DAPI_Hardware.Stm32=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON -DAPI_nanoFramework.Devices.OneWire=ON -DAPI_nanoFramework.Devices.Can=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('ST_STM32F4_DISCOVERY_versioncounter', 0)]
    GccArm_Version:
    NeedsDFU: false

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml
  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml
  - template: azure-pipelines-templates/build-preparations.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild
  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild
  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/publish-cloudsmith.yml@templatesBuild

##############################
- job: Build_ST_NUCLEO144_F439ZI
  condition: or( eq(variables['BUILD_ALL'], 'true'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] ST_NUCLEO144_F439ZI'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] BUILD ALL'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'windows-2019'

  variables:
    TargetBoard: ST_NUCLEO144_F439ZI
    BuildOptions: -DTARGET_SERIES=STM32F4xx -DRTOS=CHIBIOS -DNF_FEATURE_DEBUGGER=ON -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DNF_FEATURE_HAS_CONFIG_BLOCK=ON -DAPI_System.Math=ON -DAPI_Hardware.Stm32=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON -DAPI_System.Net=ON -DNF_SECURITY_MBEDTLS=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('ST_NUCLEO144_F439ZI_versioncounter', 0)]
    GccArm_Version:
    NeedsDFU: false

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml
  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml
  - template: azure-pipelines-templates/build-preparations.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild
  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild
  - template: azure-pipelines-templates/build-chibios-stm32.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/publish-cloudsmith.yml@templatesBuild

##############################
- job: Build_TI_CC1352P1_LAUNCHXL_868
  condition: or( contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] TI_CC1352P1_LAUNCHXL_868'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] BUILD ALL'), eq(variables['BUILD_ALL'], 'true'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'windows-2019'

  variables:
    TargetBoard: TI_CC1352P1_LAUNCHXL
    PackageName: TI_CC1352P1_LAUNCHXL_868
    BuildOptions: -DTARGET_SERIES=CC13x2_26x2 -DRTOS=TI_SIMPLELINK -DRADIO_FREQUENCY=868 -DSUPPORT_ANY_BASE_CONVERSION=OFF -DNF_FEATURE_DEBUGGER=ON -DNF_FEATURE_RTC=ON -DNF_FEATURE_WATCHDOG=OFF -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=OFF -DAPI_Windows.Devices.I2c=OFF -DAPI_Windows.Devices.Pwm=OFF -DAPI_Windows.Devices.SerialCommunication=OFF -DAPI_Windows.Devices.Adc=ON -DAPI_nanoFramework.TI.EasyLink=ON -DAPI_nanoFramework.Hardware.TI=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('TI_CC1352P1_LAUNCHXL_868_versioncounter', 0)]
    GccArm_Version:
    NeedsDFU: false

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml
  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml
  - template: azure-pipelines-templates/build-preparations.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild
  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild
  - template: azure-pipelines-templates/build-ti-simplelink.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/publish-cloudsmith.yml@templatesBuild

##############################
- job: Build_TI_CC1352P1_LAUNCHXL_915
  condition: or( contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] TI_CC1352P1_LAUNCHXL_915'), contains(dependencies.Get_Commit_Message.outputs['GetCommit.COMMIT_MESSAGE'], '[x] BUILD ALL'), eq(variables['BUILD_ALL'], 'true'), eq(dependencies.Check_Build_Options.outputs['BuildOptions.GO'], 'True') )

  dependsOn: 
  - Get_Commit_Message
  - Check_Build_Options

  pool:
    vmImage: 'windows-2019'

  variables:
    TargetBoard: TI_CC1352P1_LAUNCHXL
    PackageName: TI_CC1352P1_LAUNCHXL_915
    BuildOptions: -DTARGET_SERIES=CC13x2_26x2 -DRTOS=TI_SIMPLELINK -DRADIO_FREQUENCY=915 -DSUPPORT_ANY_BASE_CONVERSION=OFF -DNF_FEATURE_DEBUGGER=ON -DNF_FEATURE_RTC=ON -DNF_FEATURE_WATCHDOG=OFF -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=OFF -DAPI_Windows.Devices.I2c=OFF -DAPI_Windows.Devices.Pwm=OFF -DAPI_Windows.Devices.SerialCommunication=OFF -DAPI_Windows.Devices.Adc=ON -DAPI_nanoFramework.TI.EasyLink=ON -DAPI_nanoFramework.Hardware.TI=ON
    # creates a counter and assigns it to the revision variable
    REVISION: $[counter('TI_CC1352P1_LAUNCHXL_915_versioncounter', 0)]
    GccArm_Version:
    NeedsDFU: false

  steps:
  - checkout: self
    fetchDepth: 1

  - template: azure-pipelines-templates/set-build-version.yml
  - template: azure-pipelines-templates/clone-nf-interpreter-repo.yml
  - template: azure-pipelines-templates/build-preparations.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml@templatesBuild
  - template: azure-pipelines-templates/download-install-ninja.yml@templatesBuild
  - template: azure-pipelines-templates/download-hexdfu.yml@templatesBuild
  - template: azure-pipelines-templates/build-ti-simplelink.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/pack-publish-artifacts.yml@templatesBuild
    parameters:
      buildDirectory: $(Build.SourcesDirectory)\nf-interpreter\build
  - template: azure-pipelines-templates/publish-cloudsmith.yml@templatesBuild

##################################
# report build failure to Discord
- job: Report_Build_Failure
  dependsOn:
  - Build_GHI_FEZ_CERB40_NF
  - Build_I2M_ELECTRON_NF
  - Build_I2M_OXYGEN_NF
  - Build_ST_NUCLEO64_F401RE_NF
  - Build_ST_STM32F411_DISCOVERY
  - Build_ST_NUCLEO64_F411RE_NF
  - Build_ST_NUCLEO144_F412ZG_NF
  - Build_ST_NUCLEO144_F746ZG
  - Build_ST_STM32F4_DISCOVERY
  - Build_ST_NUCLEO144_F439ZI
  - Build_TI_CC1352P1_LAUNCHXL_868
  - Build_TI_CC1352P1_LAUNCHXL_915
  condition: or( failed('Build_GHI_FEZ_CERB40_NF'), failed('Build_I2M_ELECTRON_NF'), failed('Build_I2M_OXYGEN_NF'), failed('Build_ST_NUCLEO64_F401RE_NF'), failed('Build_ST_NUCLEO64_F411RE_NF'), failed('Build_ST_STM32F411_DISCOVERY'), failed('Build_ST_NUCLEO144_F412ZG_NF'), failed('Build_ST_NUCLEO144_F746ZG'), failed('Build_ST_STM32F4_DISCOVERY'), failed('Build_ST_NUCLEO144_F439ZI'), failed('Build_TI_CC1352P1_LAUNCHXL_868'), failed('Build_TI_CC1352P1_LAUNCHXL_915'))

  pool:
    vmImage: 'windows-2019'

  steps:
  - checkout: self
    fetchDepth: 1

  # step from template @ nf-tools repo
  - template: azure-pipelines-templates/discord-webhook.yml@templates  
    parameters:
      status: 'failure'
      webhookUrl: '$(DiscordWebhook)'
      message: ''

