# Skipping commits affecting specific files 
skip_commits:
  files:
  - '**/*.md'
  - 'LICENSE'
  - dir/*
  - '.gitignore'

image: Visual Studio 2017

init:
  - git config --global core.autocrlf true
  - git config --global credential.helper store
  - ps: Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:GitHubToken):x-oauth-basic@github.com`n"
  - git config --global user.email "%GitHubUserEmail%"
  - git config --global user.name "%GitHubUserName%"

configuration:
  - MinSizeRel

environment:
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  GNU_GCC_TOOLCHAIN_PATH: 'C:\GNU_Tools_ARM_Embedded\6-2017-q2-update1'
  NINJA_PATH: 'C:\mytools\ninja'
  HEX2DFU_PATH: 'C:\mytools\hex2dfu'
  RUBY_VERSION: 24
  TARGET_TO_BUILD: ''
  # need this here to make it easy to launch the build
  clone_folder: c:\projects\nf-interpreter\targets-community
  GitHubUserName:
    secure: 7OBtVAMTodMWK20wg6pGnQ==
  GitHubUserEmail:
    secure: HeABB68Sn/Lhbd69C2cUcfWv0ab/rMDEcOLvcxf8gGw=
  GitHubToken:
    secure: WOqlCsnwTzfDPJFoNV/h8mEESIpG/9uFn1u6oE8hGZtXwIQQlsY+NyyLt9Y5xoFn

  matrix:
    - BOARD_NAME: 'ST_STM32F4_DISCOVERY'
      BUILD_OPTIONS: '-DTARGET_SERIES=STM32F4xx -DUSE_FPU=TRUE -DNF_FEATURE_DEBUGGER=TRUE -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON'

matrix:
  fast_finish: true

cache:
  - '%GNU_GCC_TOOLCHAIN_PATH%'

install:
  - set PATH=C:\Ruby%RUBY_VERSION%\bin;%PATH%
  - set PATH=%NINJA_PATH%;%PATH%

  - gem install github_changelog_generator --quiet --no-ri --no-rdoc
  - choco install gitversion.portable -pre -y

  - ps: |

      # extract board name to build
      .\get-target-to-build.ps1

      if($env:TARGET_TO_BUILD -eq $env:BOARD_NAME)
      {
        .\install-arm-gcc-toolchain.ps1
        .\install-ninja.ps1
        .\install-nf-hex2dfu.ps1
      }

build:
  verbosity: minimal

before_build:
  - md build
  - ps: |

      if($env:TARGET_TO_BUILD -eq $env:BOARD_NAME)
      {
        cd ..

        git clone https://github.com/nanoframework/nf-interpreter.git -b develop --depth 1 -q

        cd build
        gitversion /l console /output buildserver

        cd build
        $cmake = "cmake"

        # need to split the build options into an array to properly pass those as CMake arguments
        $separator = " "
        $splitOption = [System.StringSplitOptions]::RemoveEmptyEntries
        $cmakeOptions = $env:BUILD_OPTIONS.Split($separator, $splitOption)

        If($env:NEEDS_DFU -eq 'True')
        {
            $cmakeOptions += "-DTOOL_HEX2DFU_PREFIX=$env:HEX2DFU_PATH".Replace('\','/')
        }

        &$cmake -G Ninja "-DTOOLCHAIN_PREFIX=$env:GNU_GCC_TOOLCHAIN_PATH" "-DCHIBIOS_BOARD=$env:BOARD_NAME" "-DCMAKE_BUILD_TYPE=$env:CONFIGURATION" $cmakeOptions ..
      }

build_script:
  - ps: |

      if($env:TARGET_TO_BUILD -eq $env:BOARD_NAME)
      {
        $cmake = "cmake"
        &$cmake --build (Get-Location).path --target all --config "$env:CONFIGURATION"
      }

after_build:
  - 7z a %BOARD_NAME%-%GitVersion_SemVer%.zip %APPVEYOR_BUILD_FOLDER%\build\*.bin
  - 7z a %BOARD_NAME%-%GitVersion_SemVer%.zip %APPVEYOR_BUILD_FOLDER%\build\*.hex
  - 7z a %BOARD_NAME%-%GitVersion_SemVer%.zip %APPVEYOR_BUILD_FOLDER%\build\*.s19
  - 7z a %BOARD_NAME%-%GitVersion_SemVer%.zip %APPVEYOR_BUILD_FOLDER%\build\*.dfu

test: off

artifacts:
  - path: '**\%BOARD_NAME%-%GitVersion_SemVer%.zip'
    name: nanoImage

# before_deploy:
#   # need this to keep ruby happy
#   - ps: md c:\tmp
#   - bundle exec github_changelog_generator --token %GitHubToken%
#   # add here the updated changelog and the updated assembly info files
#   - git add .
#   - git commit --amend --no-edit

notifications:
  - provider: Slack
    auth_token:
      secure: 2tqAJTTbN2dm24Vrwo5TXun3Vxc34R5G9l7o3pK3xEuKZAzxx3nbP2yGkMI/kl3+NxHXknjBfZnkhZC5eLYBHb+jO7YVUZwPYOfC/ZGy5HU=
    channel: '#build-monitor'
    on_build_status_changed: true
    on_build_success: false
    on_build_failure: false

  - provider: Email
    to:
      - $(APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL)
    on_build_success: true|false
    on_build_failure: true|false
    on_build_status_changed: true|false
