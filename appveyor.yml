# Skipping commits affecting specific files 
skip_commits:
  files:
  - '**/*.md'
  - 'LICENSE'
  - dir/*
  - '.gitignore'

image: Visual Studio 2017

init:
  - git config --global core.autocrlf true
  - git config --global credential.helper store
  - ps: Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:GitHubToken):x-oauth-basic@github.com`n"
  - git config --global user.email "%GitHubUserEmail%"
  - git config --global user.name "%GitHubUserName%"

configuration:
  - MinSizeRel

environment:
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  GNU_GCC_TOOLCHAIN_PATH: 'C:\GNU_Tools_ARM_Embedded\6-2017-q2-update1'
  NINJA_PATH: 'C:\mytools\ninja'
  HEX2DFU_PATH: 'C:\mytools\hex2dfu'
  RUBY_VERSION: 24
  BOARD_NAME: ''
  BUILD_OPTIONS: ''
  NEEDS_DFU: 'False'
  GitHubUserName:
    secure: 7OBtVAMTodMWK20wg6pGnQ==
  GitHubUserEmail:
    secure: HeABB68Sn/Lhbd69C2cUcfWv0ab/rMDEcOLvcxf8gGw=
  GitHubToken:
    secure: WOqlCsnwTzfDPJFoNV/h8mEESIpG/9uFn1u6oE8hGZtXwIQQlsY+NyyLt9Y5xoFn
  BinTrayKey:
    secure: Wz0wwFOzMkDwwzzax1HPzKZB3r/aTprlleqFYX5arxpH9pP3D9glINxEuY+P/BaN

matrix:
  fast_finish: false

cache:
  - '%GNU_GCC_TOOLCHAIN_PATH%'

install:
  - set PATH=C:\Ruby%RUBY_VERSION%\bin;%PATH%
  - set PATH=%NINJA_PATH%;%PATH%

  - gem install github_changelog_generator --quiet --no-ri --no-rdoc
  - choco install gitversion.portable -pre -y

  - ps: |
     
      # extract board name to build
      .\get-target-to-build.ps1

      if(![string]::IsNullOrWhiteSpace($env:BOARD_NAME))
      {
        .\install-arm-gcc-toolchain.ps1
        .\install-ninja.ps1
        .\install-nf-hex2dfu.ps1
      }

build:
  verbosity: minimal

before_build:
  - ps: |

      if($env:BOARD_NAME)
      {
        gitversion /l console /output buildserver

        # clone nf-interpreter
        git clone https://github.com/nanoframework/nf-interpreter.git -b develop nf-interpreter --depth 1 -q

        .\clone-nf-interpreter.ps1

        cd nf-interpreter
        md build
        cd build

        if(!$global:BUILD_MATRIX)
        {
          $cmake = "cmake"

          # need to split the build options into an array to properly pass those as CMake arguments
          $separator = " "
          $splitOption = [System.StringSplitOptions]::RemoveEmptyEntries
          $cmakeOptions = $env:BUILD_OPTIONS.Split($separator, $splitOption)

          If($env:NEEDS_DFU -eq 'True')
          {
              $cmakeOptions += "-DTOOL_HEX2DFU_PREFIX=$env:HEX2DFU_PATH".Replace('\','/')
          }

          &$cmake -G Ninja "-DTOOLCHAIN_PREFIX=$env:GNU_GCC_TOOLCHAIN_PATH" "-DCHIBIOS_BOARD=$env:BOARD_NAME" "-DCMAKE_BUILD_TYPE=$env:CONFIGURATION" $cmakeOptions ..
        }
      }

build_script:
  - ps: |

      if($env:BOARD_NAME)
      {
        Install-Module 7Zip4PowerShell -Force

        if(!$global:BUILD_MATRIX)
        {
          $cmake = "cmake"
          &$cmake --build (Get-Location).path --target all --config "$env:CONFIGURATION"
          
          if ($lastexitcode -ne 0)
          {
            throw [System.Exception] "CMake build failed with exit code $lastexitcode."
          }
 
          Compress-7Zip -Path . -Filter "*.bin" -ArchiveFileName $env:BOARD_NAME-$env:GitVersion_AssemblySemVer.zip -DisableRecursion
          Compress-7Zip -Path . -Filter "*.hex" -ArchiveFileName $env:BOARD_NAME-$env:GitVersion_AssemblySemVer.zip -DisableRecursion -Append
          Compress-7Zip -Path . -Filter "*.s19" -ArchiveFileName $env:BOARD_NAME-$env:GitVersion_AssemblySemVer.zip -DisableRecursion -Append
          If($env:NEEDS_DFU -eq 'True')
          {
            Compress-7Zip -Path . -Filter "*.dfu" -ArchiveFileName $env:BOARD_NAME-$env:GitVersion_AssemblySemVer.zip -DisableRecursion -Append
          }

          #upload package only if this not a PR
          if(!$env:APPVEYOR_PULL_REQUEST_NUMBER)
          {
            $webClient = New-Object System.Net.WebClient
            $webClient.Credentials = new-object System.Net.NetworkCredential("nfbot", $env:BinTrayKey)
            $webClient.UploadFile("https://api.bintray.com/content/nfbot/nanoframework-images-community-targets/$env:BOARD_NAME/$env:GitVersion_AssemblySemVer/$env:BOARD_NAME-$env:GitVersion_AssemblySemVer.zip;publish=1", "PUT", "$env:APPVEYOR_BUILD_FOLDER\nf-interpreter\build\$env:BOARD_NAME-$env:GitVersion_AssemblySemVer.zip")
          }
        }
        else
        {
          ForEach($item in $global:BUILD_MATRIX)
          {
            $env:BOARD_NAME = $item[0]
            $env:BUILD_OPTIONS = $item[1]
            $env:NEEDS_DFU = $item[2]

            $cmake = "cmake"

            # need to split the build options into an array to properly pass those as CMake arguments
            $separator = " "
            $splitOption = [System.StringSplitOptions]::RemoveEmptyEntries
            $cmakeOptions = $env:BUILD_OPTIONS.Split($separator, $splitOption)

            If($env:NEEDS_DFU -eq 'True')
            {
                $cmakeOptions += "-DTOOL_HEX2DFU_PREFIX=$env:HEX2DFU_PATH".Replace('\','/')
            }

            &$cmake -G Ninja "-DTOOLCHAIN_PREFIX=$env:GNU_GCC_TOOLCHAIN_PATH" "-DCHIBIOS_BOARD=$env:BOARD_NAME" "-DCMAKE_BUILD_TYPE=$env:CONFIGURATION" $cmakeOptions ..

            &$cmake --build (Get-Location).path --target all --config "$env:CONFIGURATION"

            if ($lastexitcode -ne 0)
            {
              throw [System.Exception] "CMake build failed with exit code $lastexitcode."
            }

            Compress-7Zip -Path . -Filter "*.bin" -ArchiveFileName $env:BOARD_NAME-$env:GitVersion_AssemblySemVer.zip -DisableRecursion
            Compress-7Zip -Path . -Filter "*.hex" -ArchiveFileName $env:BOARD_NAME-$env:GitVersion_AssemblySemVer.zip -DisableRecursion -Append
            Compress-7Zip -Path . -Filter "*.s19" -ArchiveFileName $env:BOARD_NAME-$env:GitVersion_AssemblySemVer.zip -DisableRecursion -Append
            If($env:NEEDS_DFU -eq 'True')
            {
              Compress-7Zip -Path . -Filter "*.dfu" -ArchiveFileName $env:BOARD_NAME-$env:GitVersion_AssemblySemVer.zip -DisableRecursion -Append
            }
            
            #upload package only if this not a PR
            if(!$env:APPVEYOR_PULL_REQUEST_NUMBER)
            {
              $webClient = New-Object System.Net.WebClient
              $webClient.Credentials = new-object System.Net.NetworkCredential("nfbot", $env:BinTrayKey)
              $webClient.UploadFile("https://api.bintray.com/content/nfbot/nanoframework-images-community-targets/$env:BOARD_NAME/$env:GitVersion_AssemblySemVer/$env:BOARD_NAME-$env:GitVersion_AssemblySemVer.zip;publish=1", "PUT", "$env:APPVEYOR_BUILD_FOLDER\nf-interpreter\build\$env:BOARD_NAME-$env:GitVersion_AssemblySemVer.zip")
            }

            cd ..
            Rename-Item -NewName build-$env:BOARD_NAME -Path "build" -Force
            md build
            cd build
          }
        }

      }

test: off

artifacts:
  - path: '**\*.zip'
    name: nanoImage

# before_deploy:
#   # need this to keep ruby happy
#   - ps: md c:\tmp
#   - bundle exec github_changelog_generator --token %GitHubToken%
#   # add here the updated changelog and the updated assembly info files
#   - git add .
#   - git commit --amend --no-edit

notifications:
  - provider: Slack
    auth_token:
      secure: 2tqAJTTbN2dm24Vrwo5TXun3Vxc34R5G9l7o3pK3xEuKZAzxx3nbP2yGkMI/kl3+NxHXknjBfZnkhZC5eLYBHb+jO7YVUZwPYOfC/ZGy5HU=
    channel: '#build-monitor'
    on_build_status_changed: true
    on_build_success: false
    on_build_failure: false

  - provider: Email
    to:
      - $(APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL)
    on_build_success: true|false
    on_build_failure: true|false
    on_build_status_changed: true|false
  
